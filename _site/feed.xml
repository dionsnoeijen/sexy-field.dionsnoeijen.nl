<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-10-20T16:28:24+02:00</updated><id>http://localhost:4000/</id><title type="html">SexyField Documentation</title><subtitle>Dion Snoeijen</subtitle><entry><title type="html">Getting started with SexyField</title><link href="http://localhost:4000/documentation/2017/10/12/getting-started.html" rel="alternate" type="text/html" title="Getting started with SexyField" /><published>2017-10-12T12:00:00+02:00</published><updated>2017-10-12T12:00:00+02:00</updated><id>http://localhost:4000/documentation/2017/10/12/getting-started</id><content type="html" xml:base="http://localhost:4000/documentation/2017/10/12/getting-started.html">&lt;p&gt;This is a simple step by step guide to get started with SexyField. We will use it with Symfony. For this guide we will build a simple blog.&lt;/p&gt;

&lt;h1 id=&quot;step-1-create-a-symfony-application&quot;&gt;Step 1: Create a &lt;a href=&quot;http://symfony.com/download&quot; target=&quot;_blank&quot;&gt;symfony&lt;/a&gt; application.&lt;/h1&gt;

&lt;p&gt;Follow the steps described on the symfony website here: &lt;a href=&quot;http://symfony.com/download&quot; target=&quot;_blank&quot;&gt;http://symfony.com/download&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After running: &lt;code class=&quot;highlighter-rouge&quot;&gt;symfony new sexyblog&lt;/code&gt; at your local dev environment we are ready to include SexyField.&lt;/p&gt;

&lt;p&gt;Configure the database, and start the built in server with: &lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console server:start&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;info&quot;&gt;
  &lt;p&gt;For a local database, you might just want to use docker.
Hereby a simple docker-compose config that will be sufficient to get started.&lt;/p&gt;

  &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# docker/docker-compose.yml&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2&quot;&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3306:3306&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;MYSQL_DATABASE&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sexyblog&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;S0m3FAk3PassW0rD&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./data/mysql:/var/lib/mysql&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;h1 id=&quot;step-2-add-the-sexy-field-bundle-package-to-composer&quot;&gt;Step 2: Add the sexy-field-bundle package to composer.&lt;/h1&gt;

&lt;div class=&quot;info&quot;&gt;
  &lt;p&gt;At this moment, SexyField is still in development. Therefore we have to add two configurations to composer.json
&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;minimum-stability&quot;: &quot;dev&quot;,&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;prefer-stable&quot;: true,&lt;/code&gt;&lt;/p&gt;

  &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vendor/sexyblog&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;proprietary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;project&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;minimum-stability&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dev&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;prefer-stable&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Add the sexy-field-bundle dependency to “require”.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tardigrades/sexy-field-bundle&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dev-master&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;info&quot;&gt;
  &lt;p&gt;In essence, SexyField is data storage agnostic. So configuration is based on how you want your data to be structured in general. You can look at it as in sections that contain fields. Just like a database that has columns, or a form has input fields. Based on this configuration, SexyField can automate several tasks. This particular bundle includes the following to support doctrine:
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;tardigrades/sexy-field&quot;&lt;/code&gt; This is the base package.&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;tardigrades/sexy-field-api&quot;&lt;/code&gt; Provides endpoints based on sections.&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;tardigrades/sexy-field-entity&quot;&lt;/code&gt; Contains an entity generator and FieldType entity support.&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;tardigrades/sexy-field-doctrine&quot;&lt;/code&gt; Contains a doctrine config generator, a doctrine reader and a writer and FieldType doctrine config support.&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;tardigrades/sexy-field-form&quot;&lt;/code&gt; Integrates symfony forms.&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;tardigrades/sexy-field-field-types-base&quot;: &quot;dev-master&quot;&lt;/code&gt; These are the provided field types.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Let’s use migrations to keep track of changes in the database. Also add:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;doctrine/doctrine-migrations-bundle&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^1.2.1&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And run composer update.&lt;/p&gt;

&lt;h1 id=&quot;step-3-run-migrations&quot;&gt;Step 3: Run migrations&lt;/h1&gt;

&lt;div class=&quot;info&quot;&gt;
  &lt;p&gt;SexyField configuration is stored in the database, a database scheme is present. For a SexyField doctrine setup the &lt;a href=&quot;https://symfony.com/doc/master/bundles/DoctrineMigrationsBundle/index.html&quot; target=&quot;_blank&quot;&gt;doctrine migrations bundle&lt;/a&gt; is recommended.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Run: &lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console doctrine:migrations:diff&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console doctrine:migrations:migrate&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;step-4-install-the-field-types&quot;&gt;Step 4: Install the field types&lt;/h1&gt;

&lt;p&gt;Execute the following command (just copy / paste):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/console sf:install-field-type Tardigrades&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;FieldType&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Choice&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Choice &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
bin/console sf:install-field-type Tardigrades&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;FieldType&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;DateTime&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;DateTimeField &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
bin/console sf:install-field-type Tardigrades&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;FieldType&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Email&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Email &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
bin/console sf:install-field-type Tardigrades&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;FieldType&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Integer&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Integer &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
bin/console sf:install-field-type Tardigrades&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;FieldType&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Number&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Number &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
bin/console sf:install-field-type Tardigrades&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;FieldType&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Relationship&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Relationship &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
bin/console sf:install-field-type Tardigrates&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;FieldType&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;RichTextArea&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;RichTextArea &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
bin/console sf:install-field-type Tardigrates&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;FieldType&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Slug&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Slug &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
bin/console sf:install-field-type Tardigrades&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;FieldType&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;TextArea&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;TextArea &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
bin/console sf:install-field-type Tardigrades&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;FieldType&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;TextInput&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;TextInput
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h1 id=&quot;step-5&quot;&gt;&lt;a href=&quot;#step-5&quot;&gt;Step 5: Make configurations&lt;/a&gt;&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#language&quot;&gt;Language&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#application&quot;&gt;Application&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#field&quot;&gt;Field&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot;&gt;Section&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Configurations are done with yml files. At this point we have a couple of different configurations.&lt;/p&gt;

&lt;div class=&quot;info&quot;&gt;
  &lt;p&gt;The resulting folder structure will look like this.&lt;/p&gt;

  &lt;p&gt;In app/config:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;sexy-field
      &lt;ul&gt;
        &lt;li&gt;application
          &lt;ul&gt;
            &lt;li&gt;application.yml&lt;/li&gt;
            &lt;li&gt;language.yml&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;author
          &lt;ul&gt;
            &lt;li&gt;field
              &lt;ul&gt;
                &lt;li&gt;firstName.yml&lt;/li&gt;
                &lt;li&gt;infix.yml&lt;/li&gt;
                &lt;li&gt;lastName.yml&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/li&gt;
            &lt;li&gt;author.yml&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;blog
          &lt;ul&gt;
            &lt;li&gt;field
              &lt;ul&gt;
                &lt;li&gt;title.yml&lt;/li&gt;
                &lt;li&gt;summary.yml&lt;/li&gt;
                &lt;li&gt;author.yml&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/li&gt;
            &lt;li&gt;blog.yml&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;comment
          &lt;ul&gt;
            &lt;li&gt;field
              &lt;ul&gt;
                &lt;li&gt;name.yml&lt;/li&gt;
                &lt;li&gt;email.yml&lt;/li&gt;
                &lt;li&gt;comment.yml&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/li&gt;
            &lt;li&gt;comment.yml&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;generic
          &lt;ul&gt;
            &lt;li&gt;field
              &lt;ul&gt;
                &lt;li&gt;created.yml&lt;/li&gt;
                &lt;li&gt;updated.yml&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;There are commands available to apply configurations.&lt;/p&gt;

&lt;div class=&quot;info&quot;&gt;
  &lt;p&gt;Application commands&lt;br /&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:create-application &amp;lt;path to config yml&amp;gt;&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:update-application &amp;lt;path to config yml&amp;gt;&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:delete-application (follow dialog)&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:list-application&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;br /&gt;Language commands&lt;br /&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:create-language &amp;lt;path to config yml&amp;gt;&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:update-language &amp;lt;path to config yml&amp;gt;&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:delete-language (follow dialog)&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/conole sf:list-language&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;br /&gt;Field type commands&lt;br /&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:instal-field-type &amp;lt;namespace&amp;gt; (Escape \ in namespace)&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:update-field-type (follow dialog)&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:delete-field-type (follow dialog)&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:list-field-type&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;br /&gt;Field commands&lt;br /&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:create-field &amp;lt;path to config yml&amp;gt;&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:update-field &amp;lt;path to config yml&amp;gt; (follow dialog)&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:delete-field (follow dialog)&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:list-field&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;br /&gt;Section commands&lt;br /&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:create-section &amp;lt;path to config yml&amp;gt;&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:update-section &amp;lt;path to config yml&amp;gt; (follow dialog)&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:delete-section (follow dialog)&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:list-section&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:generate-section (follow dialog)&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:restore-section (follow dialog)&lt;/code&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h1 id=&quot;language&quot;&gt;&lt;a href=&quot;#language&quot;&gt;Language&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;For section entries, you can have multiple languages.&lt;/p&gt;

&lt;div class=&quot;info&quot;&gt;
  &lt;p&gt;At this point, language functionality is incomplete, don’t bother too much, just create the languages.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/config/sexy-field/application/language.yml&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nl_NL&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;en_EN&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From the root of your project, run:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:create-language app/config/sexy-field/application/language.yml&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;application&quot;&gt;&lt;a href=&quot;#application&quot;&gt;Application&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;You can have multiple applications that can relate to sections, you can look upon this as a group of sections.&lt;/p&gt;

&lt;div class=&quot;info&quot;&gt;
  &lt;p&gt;At this point, application functionality is incomplete, don’t bother too much, just create the application.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/config/sexy-field/application/application.yml&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Blog&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;blog&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;languages&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nl_NL&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;en_EN&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From the root of your project, run:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/console sf:create-application app/config/sexy-field/application/application.yml&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;field&quot;&gt;&lt;a href=&quot;#field&quot;&gt;Field&lt;/a&gt;&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sections are created from fields that are based on field types.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A field can be assigned to multiple sections. For some fields this is relevant. Like the updated and created field. It’s recommended to have all sections contain those two fields. Let’s start by creating both.&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/config/sexy-field/generic/field/created.yml&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Created&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;created&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DateTimeField&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;entityEvents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;prePersist&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Creation date&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/config/sexy-field/generic/field/updated.yml&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Updated&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;updated&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DateTimeField&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;entityEvents&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;prePersist&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;preUpdate&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Update date&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;name: This is the field name that can be displayed for interal, admin users.
handle: The handle is usually based on the name. It is used to access the field data when in a section.
type: Refers to the field type that is being configured.&lt;/p&gt;

&lt;div class=&quot;info&quot;&gt;
  &lt;p&gt;entityEvents will be deprecated soon and change: &lt;a href=&quot;https://github.com/dionsnoeijen/sexy-field/issues/17&quot;&gt;https://github.com/dionsnoeijen/sexy-field/issues/17&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The entity events are telling the entity generator what event generators it should trigger. At this point, this particular field type (DateTimeField) supports two event generators through the &lt;code class=&quot;highlighter-rouge&quot;&gt;sexy-field-entity&lt;/code&gt; package: EntityPrePersistGenerator and EntityPreUpdateGenerator.&lt;/p&gt;

&lt;p&gt;If you add them to the array, like in the example. The entity generator will generate the accompanying event handling methods like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onPrePersist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;vg&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;created&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'now'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;vg&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;updated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'now'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onPreUpdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;vg&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;updated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'now'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;form&lt;/code&gt; config, points to how it should render the form.&lt;/p&gt;

&lt;p&gt;It has three groups, in this case only one is used.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;all&lt;/code&gt; For both create and update forms.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;create&lt;/code&gt; Config that only works for the create form.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;update&lt;/code&gt; Config that only works for the update form.&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;&lt;a href=&quot;#section&quot;&gt;Section&lt;/a&gt;&lt;/h1&gt;</content><author><name>Dion Snoeijen</name></author><summary type="html">This is a simple step by step guide to get started with SexyField. We will use it with Symfony. For this guide we will build a simple blog.</summary></entry></feed>